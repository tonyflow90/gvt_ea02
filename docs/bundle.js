!function(){"use strict";let e,t;document.body.onload=o=>{e=document.querySelector("#canvas"),t=e.getContext("webgl"),t.clearColor(.25,.35,.45,1);let l=r(16);a(t.LINE_LOOP,0,48,l)};let r=(e=8)=>{let t=[],r=e,a=1,o=2*Math.PI/r;for(let e=0;e<r;e+=1){a=.5*Math.random()+.5;let r=0,l=0,c=a*Math.cos(o*e),i=a*Math.sin(o*e),n=a*Math.cos(o*(e+1)),d=a*Math.sin(o*(e+1));t=[...t,r,l,c,i,n,d]}return new Float32Array(t)},a=(e,r=0,a=0,o)=>{let l=t.createShader(t.VERTEX_SHADER);t.shaderSource(l,"attribute vec2 pos;void main(){ gl_Position = vec4(pos, 0, 1); }"),t.compileShader(l);let c=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(c,"void main() { gl_FragColor = vec4(0,0,0,1); }"),t.compileShader(c);let i=t.createProgram();t.attachShader(i,l),t.attachShader(i,c),t.linkProgram(i),t.useProgram(i);let n=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,n),t.bufferData(t.ARRAY_BUFFER,o,t.STATIC_DRAW);let d=t.getAttribLocation(i,"pos");t.vertexAttribPointer(d,2,t.FLOAT,!1,0,0),t.enableVertexAttribArray(d),t.clear(t.COLOR_BUFFER_BIT),t.drawArrays(e,r,a)}}();
//# sourceMappingURL=bundle.js.map
